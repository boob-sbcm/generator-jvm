buildscript {
  ext {
    javaVersion = '1.8'
    slf4jVersion = '1.7.25'
    jgivenVersion = '0.15.3'
    logbackVersion = '1.2.3'
    lombokVersion = '1.16.22'
    scalaCompatVersion = '2.11'
    scalaVersion = "${scalaCompatVersion}.8"
    scalatestVersion = "${scalaCompatVersion}:3.0.4"
    asciidoctorjPdfVersion = '1.5.0-alpha.15'
  }

  dependencies {
    classpath "org.asciidoctor:asciidoctorj-pdf:$asciidoctorjPdfVersion"
  }
}

plugins {
  id 'idea'
  id 'java'
  id 'scala'
  id 'maven'
  id 'eclipse'
  id 'application'
  id 'com.github.johnrengelman.shadow' version '2.0.2'
  id 'com.avast.gradle.docker-compose' version '0.6.13'
  id 'org.asciidoctor.convert' version '1.5.7' apply false
  id 'org.ajoberstar.git-publish' version '0.3.0' apply false
  id 'cn.bestwu.propdeps-eclipse' version '0.0.10' apply false
  id 'cn.bestwu.propdeps-maven' version '0.0.10' apply false
  id 'cn.bestwu.propdeps-idea' version '0.0.10' apply false
  id 'cn.bestwu.propdeps' version '0.0.10' apply false
}

/*
wrapper {
  gradleVersion = '4.8.1'
  distributionType = 'BIN'
}
*/

apply from: "$projectDir/gradle/ide.gradle"
apply from: "$projectDir/gradle/clean.gradle"
apply from: "$projectDir/gradle/repositories.gradle"

group = 'com.github.daggerok'
version = '0.0.1'
sourceCompatibility = targetCompatibility = "$javaVersion"

mainClassName = 'daggerok.App'
shadowJar.mustRunAfter jar

allprojects {
  apply plugin: 'maven-publish'

  publishing {
    publications {
      shadow(MavenPublication) { publication ->
        project.shadow.component(publication)
      }
    }
  }
  publishing {
    repositories {
      maven {
        url "$rootProject.buildDir/maven-publish"
      }
    }
  }

  publish.dependsOn assemble
}

defaultTasks 'clean', 'build'

compileJava.dependsOn(processResources)

dependencies {

  compile "org.slf4j:slf4j-api:$slf4jVersion"
  compile "ch.qos.logback:logback-classic:$logbackVersion"
  compileOnly "org.projectlombok:lombok:$lombokVersion"
  testCompileOnly "org.projectlombok:lombok:$lombokVersion"

  testCompile 'junit:junit:4.12'

  compile "org.scala-lang:scala-library:$scalaVersion"

  testCompile "org.scalactic:scalactic_$scalatestVersion"
  testCompile "org.scalatest:scalatest_$scalatestVersion"
  testCompile "org.specs2:specs2-junit_${scalaCompatVersion}:3.7"
}

apply from: "$projectDir/gradle/findbugs.gradle"
apply from: "$projectDir/gradle/docker-compose.gradle"
apply from: "$projectDir/gradle/docs.gradle"

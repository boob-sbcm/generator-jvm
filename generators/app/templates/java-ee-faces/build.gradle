buildscript {
  ext {
    javaVersion = '1.8'
    javaeeVersion = '8.0'
    facesVersion = '2.2.16'
    slf4jVersion = '1.7.25'
    jgivenVersion = '0.15.3'
    logbackVersion = '1.2.3'
    lombokVersion = '1.16.20'
    junitJupiterVersion = '5.2.0'
    junitPlatformVersion = '1.2.0'
    asciidoctorjPdfVersion = '1.5.0-alpha.15'
  }

  dependencies {
    classpath "org.asciidoctor:asciidoctorj-pdf:$asciidoctorjPdfVersion"
    classpath "org.junit.platform:junit-platform-gradle-plugin:$junitPlatformVersion"
  }
}

plugins {
//id 'ear'
  id 'war'
  id 'idea'
  id 'maven'
  id 'eclipse'
  id 'com.avast.gradle.docker-compose' version '0.6.13'
  id 'org.asciidoctor.convert' version '1.5.7' apply false
  id 'org.ajoberstar.git-publish' version '0.3.0' apply false
}

wrapper {
  gradleVersion = '4.8'
  distributionType = 'BIN'
}

apply from: "$rootDir/gradle/ide.gradle"
apply from: "$rootDir/gradle/clean.gradle"
apply from: "$rootDir/gradle/repositories.gradle"

apply plugin: 'org.junit.platform.gradle.plugin'

group = 'com.github.daggerok'
version = '0.0.1'
sourceCompatibility = targetCompatibility = "$javaVersion"

//ear { archiveName = "${project.name}.ear" }
war {
  archiveName = "${project.name}.war"
}

defaultTasks 'clean', 'build'

compileJava.dependsOn(processResources)

dependencies {

  compile("com.sun.faces:jsf-api:$facesVersion")
  compile("com.sun.faces:jsf-impl:$facesVersion")
  //// Tomcat requires weld dependency:
  //compile('org.jboss.weld.servlet:weld-servlet:2.4.7.Final')
  providedCompile("javax:javaee-web-api:$javaeeVersion")

  compileOnly("org.projectlombok:lombok:$lombokVersion")
  testCompileOnly("org.projectlombok:lombok:$lombokVersion")
  compile("org.slf4j:slf4j-api:$slf4jVersion")
  compile("org.slf4j:slf4j-jdk14:$slf4jVersion")

  testCompile('junit:junit:4.12')
  testImplementation("org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion")
  testImplementation('org.hamcrest:hamcrest-core:1.3')
  testRuntime("org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion")
  testRuntime("org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion")
  testRuntime("org.junit.vintage:junit-vintage-engine:4.12.3")
  testRuntime("org.junit.platform:junit-platform-launcher:$junitPlatformVersion")
  testCompileOnly('org.apiguardian:apiguardian-api:1.0.0')
}

apply from: "$rootDir/gradle/findbugs.gradle"
apply from: "$rootDir/gradle/docker-compose.gradle"
apply from: "$rootDir/gradle/docs.gradle"

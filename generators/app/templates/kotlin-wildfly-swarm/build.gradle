buildscript {
  ext {
    javaVersion = '1.8'
    javaeeVersion = '8.0'
    vavrVersion = '0.9.2'
    slf4jVersion = '1.7.25'
    logbackVersion = '1.2.3'
    kotlinVersion = '1.2.61'
    jgivenVersion = '0.15.3'
    lombokVersion = '1.18.2'
    assertjVersion = '3.10.0'
    junitJupiterVersion = '5.2.0'
    junitPlatformVersion = '1.2.0'
    jacksonKotlinVersion = '2.9.6'
    wildflySwarmVersion = '2018.1.0'
    hibernateCoreVersion = '4.2.18.Final'
    asciidoctorjPdfVersion = '1.5.0-alpha.15'
  }

  dependencies {
    classpath "org.asciidoctor:asciidoctorj-pdf:$asciidoctorjPdfVersion"
    classpath "org.wildfly.swarm:wildfly-swarm-gradle-plugin:$wildflySwarmVersion"
  }
}

plugins {
//id 'ear'
  id 'war'
  id 'idea'
  id 'maven'
  id 'eclipse'

  id 'org.jetbrains.kotlin.jvm' version '1.2.61' apply false
  id 'org.jetbrains.kotlin.kapt' version '1.2.61' apply false
  id 'org.jetbrains.kotlin.plugin.noarg' version '1.2.61' apply false
  id 'org.jetbrains.kotlin.plugin.spring' version '1.2.61' apply false
  id 'org.jetbrains.kotlin.plugin.allopen' version '1.2.61' apply false

  id 'cn.bestwu.propdeps-eclipse' version '0.0.10' apply false
  id 'cn.bestwu.propdeps-maven' version '0.0.10' apply false
  id 'cn.bestwu.propdeps-idea' version '0.0.10' apply false
  id 'cn.bestwu.propdeps' version '0.0.10' apply false

  id 'com.jfrog.artifactory' version '4.7.5' apply false
  id 'org.asciidoctor.convert' version '1.5.7' apply false
  id 'org.ajoberstar.git-publish' version '0.3.0' apply false
  id 'io.spring.dependency-management' version '1.0.6.RELEASE'
  id 'com.avast.gradle.docker-compose' version '0.6.13'
  id 'io.franzbecker.gradle-lombok' version '1.14'
}

apply plugin: 'wildfly-swarm'

/*
wrapper {
  gradleVersion = '4.9'
  distributionType = 'BIN'
}
*/

apply from: "$projectDir/gradle/ide.gradle"
apply from: "$projectDir/gradle/clean.gradle"
apply from: "$projectDir/gradle/repositories.gradle"

version = '0.0.1'
group = 'com.github.daggerok'
sourceCompatibility = targetCompatibility = "$javaVersion"

apply plugin: 'org.jetbrains.kotlin.jvm'
//apply plugin: 'org.jetbrains.kotlin.kapt'
apply plugin: 'org.jetbrains.kotlin.plugin.jpa'
apply plugin: 'org.jetbrains.kotlin.plugin.noarg'
apply plugin: 'org.jetbrains.kotlin.plugin.allopen'
//apply plugin: 'org.jetbrains.kotlin.plugin.spring'

compileKotlin {
  incremental = true
  kotlinOptions {
    freeCompilerArgs = ['-Xjsr305=strict']
    jvmTarget = "$javaVersion"
  }
}

compileTestKotlin {
  incremental = true
  kotlinOptions {
    freeCompilerArgs = ['-Xjsr305=strict']
    jvmTarget = "$javaVersion"
  }
}

allOpen {
  annotation('javax.ws.rs.Path')
  annotation('javax.ejb.Startup')
  annotation('javax.ejb.Stateless')
  annotation('javax.ejb.Singleton')
  annotation('javax.inject.Singleton')
  annotation('javax.persistence.Entity')
  annotation('javax.enterprise.context.ApplicationScoped')
}

noArg {
  annotation('javax.ws.rs.Path')
  annotation('javax.ejb.Startup')
  annotation('javax.ejb.Stateless')
  annotation('javax.ejb.Singleton')
  annotation('javax.inject.Singleton')
  annotation('javax.persistence.Entity')
  annotation('javax.enterprise.context.ApplicationScoped')
}

/*
ear {
  archiveName = "${project.name}.ear"
}
*/

war {
  archiveName = "${project.name}.war"
}

defaultTasks 'clean', 'build'

compileJava.dependsOn(processResources)

lombok.version = project.lombokVersion

dependencies {
  implementation 'org.wildfly.swarm:microprofile'
  implementation 'org.wildfly.swarm:logging'
  implementation 'org.wildfly.swarm:ejb'
  testImplementation 'org.wildfly.swarm:arquillian'

  //compile("com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion")
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
  implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"

  providedCompile "javax:javaee-api:$javaeeVersion"
  providedCompile 'com.h2database:h2:1.4.196'

  compile "org.hibernate:hibernate-core:$hibernateCoreVersion"
  //implementation 'javax.json:javax.json-api:1.0'
  //implementation 'org.glassfish:javax.json:1.0.4'
  //implementation 'org.jboss.resteasy:resteasy-json-p-provider:3.0.7.Final'

  implementation "org.slf4j:slf4j-api:$slf4jVersion"
  implementation "org.slf4j:slf4j-jdk14:$slf4jVersion"

  implementation "io.vavr:vavr:$vavrVersion"

  // junit 4
  testImplementation 'junit:junit:4.12'
  // junit 5
  testImplementation("org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion")
  // hamcrest asserts, like: assertThat
  testImplementation 'org.hamcrest:hamcrest-core:1.3'

  testRuntime("org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion")
  testRuntime("org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion")
  testRuntime 'org.junit.vintage:junit-vintage-engine:4.12.3'
  // IDEA (older bundle):
  testRuntime("org.junit.platform:junit-platform-launcher:$junitPlatformVersion")
  testCompileOnly 'org.apiguardian:apiguardian-api:1.0.0'
}

dependencyManagement {
  imports {
    mavenBom "org.wildfly.swarm:bom:$wildflySwarmVersion"
  }
}

swarm {
  executable = true
}

apply from: "$projectDir/gradle/findbugs.gradle"
apply from: "$projectDir/gradle/docker-compose.gradle"
apply from: "$projectDir/gradle/docs.gradle"
//apply from: "$projectDir/gradle/publish.gradle"
//apply from: "$projectDir/gradle/artifactory-shadow.gradle"

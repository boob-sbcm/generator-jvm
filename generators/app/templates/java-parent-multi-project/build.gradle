buildscript {
  ext {
    javaVersion = "1.8"
    vavrVersion = "0.9.2"
    lombokVersion = "0.9.2"
  }
}

plugins {
  id "idea"
  id "eclipse"
  id "com.avast.gradle.docker-compose" version "0.6.13"
}

allprojects {

  apply plugin: "base"
  apply plugin: "maven"

  group = "daggerok"
  version = "0.0.1"

  defaultTasks "clean", "build"

  task wrapper(type: Wrapper) {
    gradleVersion = "4.7"
    distributionType = "ALL"
  }
}

subprojects {

  apply plugin: "java"

  sourceCompatibility = targetCompatibility = "$javaVersion"

  repositories {
    mavenLocal()
    mavenCentral()
  }

  dependencies {
    // In java we trust...
    compile("io.vavr:vavr:$vavrVersion")
    //annotationProcessor("org.projectlombok:lombok:$lombokVersion")
    //compileOnly("org.projectlombok:lombok:$lombokVersion")
    //testAnnotationProcessor("org.projectlombok:lombok:$lombokVersion")
    //testCompileOnly("org.projectlombok:lombok:$lombokVersion")
  }
}

def profile = project.hasProperty("profile") ? project.getProperty("profile") : "gradle"

dockerCompose {
  useComposeFiles = [project.file("docker-compose-${profile}.yaml")]
  // captureContainersOutput = true
  captureContainersOutput = false
  stopContainers = true
  removeContainers = true
  removeImages = "Local"
  removeVolumes = true
  removeOrphans = true
  forceRecreate = true
  waitForTcpPorts = false
  projectName = project.name
}

composeUp.dependsOn assemble

idea {
  module {
    downloadSources = true
  }
}

eclipse {
  classpath {
    downloadSources = true
  }
}

/*
// spring-boot multi-module preamble:
// this in dependencies closure really doesn't work:
// compile project(":submodule").sourceSets.main.output // dot't do this!

// 1. in spring-boot submodules use next configs:

bootJar {
  enabled = false
}
jar {
  enabled = true
}

// 2. in spring-boot target main module to fix gradle compile build + lombok issue use all of these:

dependencies {
  annotationProcessor(project(":submodule"))
  compileOnly(project(":submodule"))
  compile(project(":submodule"))
}
*/

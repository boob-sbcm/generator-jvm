service:
- docker

env:
  global:
  - TERM=dumb

addons:
  apt:
    update: true
    packages:
    - tree
    - libappindicator1
    - fonts-liberation
    - bash
    - curl
    - jq
    - libxml2-utils
    - docker-ce
    - python-pip

language: java
jdk: oraclejdk8
node_js: lts/*

before_install:
- nvm install lts/*
- export CHROME_BIN=/usr/bin/google-chrome
- export DISPLAY=:99.0
- sh -e /etc/init.d/xvfb start
- wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
- sudo dpkg -i google-chrome*.deb >/dev/null 2>&1
- sudo pip install docker-compose httpie >/dev/null 2>&1
- source <(curl -s https://raw.githubusercontent.com/daggerok/bash-functions/master/main.bash)
- stop_any 8080 80

script:
- export base=$(pwd)
- npm i
- npm link
- export e2e=/tmp/yo-e2e-testing
- mkdir -p ${e2e}
- npm i -g yo yeoman-generator
- yo jvm --help
# replace dots with underscores test
- cd ${e2e}
- yo jvm -n dotted.java1.8 -t java
- cd dotted_java1_8
- ./gradlew -S >/dev/null
- java -jar build/libs/*-all.jar
- bash build/install/java/bin/java
- tree build/maven-publish
- ./mvnw clean deploy >/dev/null
- java -jar target/*-all.jar
- tree target/local-repo/
# java
- cd ${e2e}
- yo jvm -n java -t java
- cd java
- ./gradlew -S >/dev/null
- java -jar build/libs/*-all.jar
- bash build/install/java/bin/java
- tree build/maven-publish
- ./mvnw clean deploy >/dev/null
- java -jar target/*-all.jar
- tree target/local-repo/
# java-spring-boot
- cd ${e2e}
- yo jvm -n javaspringboot -t java-spring-boot
- cd javaspringboot
- ./gradlew -S >/dev/null
- ./mvnw clean deploy >/dev/null
# java-spring-boot-1.x
- cd ${e2e}
- yo jvm -n javaspringboot1x -t java-spring-boot-1.x
- cd javaspringboot1x
- ./gradlew -S >/dev/null
- ./mvnw clean deploy >/dev/null
# java-spring-cloud-function-web
- cd ${e2e}/
- yo jvm -n javaspringcloudfunctionweb -t java-spring-cloud-function-web
- cd javaspringcloudfunctionweb
- ./gradlew -S >/dev/null
- ./mvnw clean deploy >/dev/null
# kotlin
- cd ${e2e}
- yo jvm -n kotlin -t kotlin
- cd kotlin
- ./gradlew -S >/dev/null
- ./mvnw clean deploy >/dev/null
# kotlin-spring-boot
- cd ${e2e}
- yo jvm -n kotlinspringboot -t kotlin-spring-boot
- cd kotlinspringboot
- ./gradlew -S >/dev/null
- ./mvnw clean deploy >/dev/null
# kotlin-spring-boot-1.x
- cd ${e2e}
- yo jvm -n kotlinspringboot1x -t kotlin-spring-boot-1.x
- cd kotlinspringboot1x
- ./gradlew -S >/dev/null
- ./mvnw clean deploy >/dev/null
# kotlin-spring-cloud-function-web
- cd ${e2e}
- yo jvm -n kotlinspringcloudfunctionweb -t kotlin-spring-cloud-function-web
- cd kotlinspringcloudfunctionweb
- ./gradlew -S >/dev/null
- ./mvnw clean deploy >/dev/null
# done
- cd ${base}

deploy:
  provider: npm
  email: daggerok@gmail.com
  api_key:
    secure: DrDw21GkDVF+JX1TUhcWlRAl+ZxT2UljhRahAUNndHYBYQHn+fHOI2ZsxMYBXAO3xp2hvyzVgUNMO0t4nLtixNhEbYwizUSOQUHRjf3fdtjXcjNPswjw5tLQr0TcrT6CKxLlYNXmcI9qll266ggvZSG41eZJrzLDF5SXRyo2y1dotNnbie08gWpyLlsU+14dS41xxEzmlLDkuXbokUm6FvF5QAVilY47yVqCtkMipNBwTaklkQrNAdLGch2zjpmttxGzEDBS2QNsPNfj+UwUBe8l+N07TlziRfr1MG220363NKXfOe4MoVbgEQzSxJpDtB+J/Qlld2GerBem3fuN94rzhTAl75aFZsdqW9RXttCqRfxHHB5LCmRdPeIWWW8yeLZ1VAUvSFs2ADI3c40uAF4quScATm7oTmbv1bGfElygoy60gNyTRhsERe542xUxoBEu0Z5VHueBG7F1RoaU4o8G2DgTBGLreH+quW0c7EbHzgCnQilOHvfijKWP9L2PJNzHQDQPE6HnQ6lBFkzF5U/K9yWEbNPVj1dex3MRWhMU4vRU7ToYRuaxM6qNhcUB2JHKh1BsDnLAp1Wi5UfTmZo5AdT4/5QNZ3XH/rxs8SImuZQct8zwdI6Wy5tjN8kJxch8fY4eMhOnB6qPk+kIhFS27KE5alU2Z98hhLT88Js=
  all_branches: true
  skip_cleanup: true
  on:
    repo: daggerok/generator-jvm
#  tag: next

before_cache:
- sudo rm -rf $HOME/.gradle/caches/4.8/fileHashes/fileHashes.bin
- sudo rm -rf $HOME/.gradle/caches/4.8/fileHashes/fileHashes.lock
- sudo rm -rf $HOME/.gradle/caches/modules-2/modules-2.lock

cache:
  yarn: true
  directories:
  - node_modules
  - .m2
  - .gradle
  - $HOME/.m2
  - $HOME/.gradle
